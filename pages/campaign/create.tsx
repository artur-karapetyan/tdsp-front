/* eslint-disable @next/next/no-img-element */
import Head from "next/head";
import { Josefin_Sans } from "next/font/google";
import DashboardComponent from "@/components/dashboard";
import { useRouter } from "next/router";
import { useState } from "react";
import axios from "axios";
const Josefin = Josefin_Sans({ subsets: ["latin"], variable: "--josefin" });

function getCookie(name: string) {
  const cookieValue = document.cookie.match(`(^|;)\\s*${name}\\s*=\\s*([^;]+)`);
  return cookieValue ? cookieValue.pop() : "";
}

export default function Create() {
  const [name, setName] = useState<string>();
  const [budget, setBudget] = useState<number>();
  const [saveError, setSaveError] = useState<string | null>(null);
  const router = useRouter();

  async function fetcher() {
    const token = getCookie("token");

    try {
      const response = await axios.post(
        `http://${process.env.NEXT_PUBLIC_HOST}/api/campaigns/`,
        {
          name: name,
          budget: budget,
        },
        {
          headers: {
            Authorization: `Bearer ${token}`,
          },
        }
      );

      if (response.status === 201) {
        router.push("/campaign");
      } else {
        setSaveError("Please complete all fields");
      }
    } catch {
      setSaveError("Please complete all fields");
    }
  }

  function handleSaveClick() {
    fetcher();
  }

  return (
    <>
      <Head>
        <title>The Interns</title>
        <meta name="description" content="Generated by The Interns" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <DashboardComponent />
      <div className="flex flex-col overflow-y-scroll w-full h-full relative bg-[#ecf2f7] pl-60">
        <div className="flex justify-center items-center flex-grow-0 flex-shrink-0 w-full h-[75px] overflow-hidden gap-2.5 px-[5px] py-4 bg-neutral-100 border-t-0 border-r-0 border-b-[5px] border-l-0 border-[#c0c9ee]">
          <p className="flex-grow-0 flex-shrink-0 text-xl text-center text-black max-w-full">
            Create Campaign
          </p>
        </div>
        <div className="flex flex-col justify-start items-start flex-grow-0 flex-shrink-0 h-[693px] w-full relative gap-[35px] px-[50px] py-[70px]">
          <input
            placeholder="Name"
            className="flex justify-center items-center flex-grow-0 flex-shrink-0 w-[270px] h-[35px] text-base font-medium text-center text-[#3193f5] relative overflow-hidden gap-2.5 px-2.5 py-[5px] rounded bg-neutral-100 border-2 border-[#3193f5]"
            onChange={(e) => {
              setName(e.target.value);
            }}
          ></input>
          <input
            type="number"
            placeholder="Budget"
            className="flex justify-center items-center flex-grow-0 flex-shrink-0 w-[270px] h-[35px] text-base font-medium text-center text-[#3193f5] relative overflow-hidden gap-2.5 px-2.5 py-[5px] rounded bg-neutral-100 border-2 border-[#3193f5]"
            onChange={(e) => {
              setBudget(Number(e.target.value));
            }}
          ></input>
          <button
            onClick={handleSaveClick}
            className="flex justify-center items-center flex-grow-0 flex-shrink-0 w-[130px] h-10 text-xl font-medium text-center text-[#3193f5] absolute right-[60px] bottom-[60px] overflow-hidden gap-2.5 px-2.5 py-[5px] rounded bg-neutral-100 border-2 border-[#3193f5]"
          >
            Save
          </button>
          {saveError !== null && (
            <p className="text-sm text-red-500">{saveError}</p>
          )}
        </div>
      </div>
    </>
  );
}
